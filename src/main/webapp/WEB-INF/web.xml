<?xml version="1.0" encoding="utf-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	version="3.1">
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<!-- This class (org.glassfish.jersey.servlet.ServletContainer) is needed 
		that server (servlet container) can handle REST-class as a servlet, which 
		it actually is, though written in another way The element 'servlet-name' 
		is the way we can bind this class and url. See the element servlet-mapping 
		below. Its servlet-name element should have exactly the same value as here 
		in the servlet element is. -->

	<servlet>
		<servlet-name>vaalikones</servlet-name>
		<servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
		<!-- init-param tells in which package REST services are -->
		<init-param>
			<param-name>jersey.config.server.provider.packages</param-name>
			<param-value>rest</param-value>
		</init-param>

		<!-- Because of Upload -->
		<init-param>
			<param-name>jersey.config.server.provider.classnames</param-name>
			<param-value>org.glassfish.jersey.media.multipart.MultiPartFeature</param-value>
		</init-param>

		<!-- This tells the server to load REST service when the server starts -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<!-- servlet-mapping gives the first part of the path (url-pattern) where 
		the REST service is found (e.g. http://my.server.fi/rest) and the rest of 
		the path is given in the REST class and in its methods -->
	<servlet-mapping>
		<servlet-name>vaalikones</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>


	<servlet>
		<servlet-name>Vaalikone</servlet-name>
		<servlet-class>vaalikone.Vaalikone</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>Vaalikone</servlet-name>
		<url-pattern>/Vaalikone</url-pattern>
	</servlet-mapping>

	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

</web-app>